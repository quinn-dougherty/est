[package]
name = "est"
description = "An experiment in estimational programming with markets"
version = "0.1.0"
authors = ["Quinn Dougherty <quinnd@riseup.net>"]
edition = "2018"
repository = "https://github.com/quinn-dougherty/est"
license = "MIT"
[package.metadata.wasm-pack.profile]
dev.wasm-opt = false
profiling.wasm-opt = false
release.wasm-opt = false

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[build-dependencies]
lalrpop = "0.19.7"

[dependencies]
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

wasm-bindgen-futures = "0.4.32"

# language engineering and http
lalrpop-util = "0.19.7"
regex = "1"
reqwest = { version = "0.11.11", features = ["json"] }
serde = { version = "1.0.143", features = ["derive"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
